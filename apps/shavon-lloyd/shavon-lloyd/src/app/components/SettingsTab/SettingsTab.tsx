// src/app/components/SettingsTab/SettingsTab.tsx
'use client';

import { useEffect } from 'react';
import { useSettings } from '../../(shared)/settings/SettingsContext';
import { usePanel } from '../../(shared)/panel/PanelController';
import styles from './SettingsTab.module.css';

export default function SettingsTab() {
  const { open, toggle, close } = usePanel();
  const isOpen = open === 'settings';

  const { theme, setTheme, lang, setLang, region, setRegion } = useSettings();

  useEffect(() => {
    const onKey = (e: KeyboardEvent) => { if (e.key === 'Escape') close(); };
    window.addEventListener('keydown', onKey);
    return () => window.removeEventListener('keydown', onKey);
  }, [close]);

  return (
    <>
      {/* The tab "handle" on the right edge */}
      <button
        aria-expanded={isOpen}
        aria-controls="settings-panel"
        className={`${styles.tab} ${isOpen ? styles.tabOpen : ''}`}
        onClick={() => toggle('settings')}
        title="Settings"
      >
        {/* simple gear glyph placeholder */}
      <svg xmlns="http://www.w3.org/2000/svg" width="31" height="31" viewBox="0 0 31 31" fill="none">
        <g clip-path="url(#clip0_443_1395)">
          <path d="M15.5 19.3202C17.6094 19.3202 19.3194 17.6101 19.3194 15.5007C19.3194 13.3913 17.6094 11.6813 15.5 11.6813C13.3906 11.6813 11.6805 13.3913 11.6805 15.5007C11.6805 17.6101 13.3906 19.3202 15.5 19.3202Z" stroke="#D7E2EB" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
          <path d="M24.9213 19.3202C24.7518 19.7042 24.7013 20.1301 24.7761 20.5431C24.851 20.9561 25.0479 21.3372 25.3414 21.6373L25.4178 21.7137C25.6546 21.9502 25.8424 22.231 25.9705 22.5401C26.0987 22.8492 26.1646 23.1806 26.1646 23.5152C26.1646 23.8498 26.0987 24.1812 25.9705 24.4903C25.8424 24.7994 25.6546 25.0802 25.4178 25.3167C25.1813 25.5534 24.9005 25.7413 24.5914 25.8694C24.2823 25.9975 23.9509 26.0635 23.6163 26.0635C23.2817 26.0635 22.9503 25.9975 22.6412 25.8694C22.3321 25.7413 22.0513 25.5534 21.8148 25.3167L21.7384 25.2403C21.4384 24.9468 21.0573 24.7499 20.6443 24.675C20.2313 24.6001 19.8053 24.6507 19.4213 24.8202C19.0447 24.9816 18.7236 25.2495 18.4974 25.5911C18.2712 25.9327 18.1498 26.3329 18.1481 26.7426V26.9591C18.1481 27.6344 17.8799 28.282 17.4023 28.7596C16.9248 29.2371 16.2772 29.5054 15.6018 29.5054C14.9265 29.5054 14.2789 29.2371 13.8013 28.7596C13.3238 28.282 13.0555 27.6344 13.0555 26.9591V26.8445C13.0457 26.4231 12.9093 26.0144 12.6641 25.6715C12.4188 25.3287 12.0762 25.0675 11.6805 24.922C11.2965 24.7525 10.8706 24.702 10.4576 24.7769C10.0446 24.8518 9.66347 25.0487 9.36342 25.3422L9.28703 25.4185C9.05055 25.6553 8.76972 25.8431 8.4606 25.9712C8.15149 26.0994 7.82015 26.1653 7.48552 26.1653C7.1509 26.1653 6.81956 26.0994 6.51044 25.9712C6.20133 25.8431 5.9205 25.6553 5.68402 25.4185C5.44727 25.1821 5.25946 24.9012 5.13132 24.5921C5.00318 24.283 4.93722 23.9517 4.93722 23.617C4.93722 23.2824 5.00318 22.9511 5.13132 22.642C5.25946 22.3328 5.44727 22.052 5.68402 21.8155L5.76041 21.7391C6.05392 21.4391 6.25081 21.058 6.32569 20.645C6.40058 20.232 6.35002 19.806 6.18055 19.422C6.01916 19.0455 5.75118 18.7243 5.40961 18.4981C5.06804 18.2719 4.66777 18.1505 4.25809 18.1489H4.04166C3.36634 18.1489 2.71868 17.8806 2.24115 17.4031C1.76363 16.9256 1.49536 16.2779 1.49536 15.6026C1.49536 14.9273 1.76363 14.2796 2.24115 13.8021C2.71868 13.3245 3.36634 13.0563 4.04166 13.0563H4.15624C4.57765 13.0464 4.98634 12.91 5.32919 12.6648C5.67204 12.4196 5.93319 12.0769 6.07869 11.6813C6.24817 11.2973 6.29872 10.8713 6.22384 10.4583C6.14895 10.0453 5.95206 9.6642 5.65856 9.36415L5.58217 9.28776C5.34542 9.05128 5.15761 8.77045 5.02947 8.46134C4.90133 8.15222 4.83537 7.82088 4.83537 7.48626C4.83537 7.15163 4.90133 6.82029 5.02947 6.51118C5.15761 6.20206 5.34542 5.92123 5.58217 5.68475C5.81865 5.44801 6.09948 5.26019 6.40859 5.13205C6.71771 5.00391 7.04905 4.93796 7.38367 4.93796C7.71829 4.93796 8.04964 5.00391 8.35875 5.13205C8.66787 5.26019 8.94869 5.44801 9.18518 5.68475L9.26157 5.76114C9.56162 6.05465 9.94272 6.25154 10.3557 6.32642C10.7687 6.40131 11.1947 6.35075 11.5787 6.18128H11.6805C12.0571 6.01989 12.3783 5.75192 12.6045 5.41034C12.8307 5.06877 12.9521 4.66851 12.9537 4.25883V4.04239C12.9537 3.36707 13.222 2.71941 13.6995 2.24189C14.177 1.76436 14.8247 1.49609 15.5 1.49609C16.1753 1.49609 16.823 1.76436 17.3005 2.24189C17.778 2.71941 18.0463 3.36707 18.0463 4.04239V4.15697C18.0479 4.56666 18.1693 4.96692 18.3955 5.30849C18.6217 5.65007 18.9429 5.91804 19.3194 6.07943C19.7034 6.2489 20.1294 6.29946 20.5424 6.22457C20.9554 6.14969 21.3365 5.9528 21.6366 5.65929L21.713 5.5829C21.9494 5.34615 22.2303 5.15834 22.5394 5.0302C22.8485 4.90206 23.1798 4.8361 23.5145 4.8361C23.8491 4.8361 24.1804 4.90206 24.4895 5.0302C24.7987 5.15834 25.0795 5.34615 25.316 5.5829C25.5527 5.81938 25.7405 6.10021 25.8687 6.40932C25.9968 6.71844 26.0628 7.04978 26.0628 7.3844C26.0628 7.71903 25.9968 8.05037 25.8687 8.35948C25.7405 8.6686 25.5527 8.94943 25.316 9.18591L25.2396 9.2623C24.9461 9.56235 24.7492 9.94345 24.6743 10.3565C24.5994 10.7695 24.65 11.1954 24.8194 11.5794V11.6813C24.9808 12.0578 25.2488 12.379 25.5904 12.6052C25.9319 12.8314 26.3322 12.9528 26.7419 12.9544H26.9583C27.6336 12.9544 28.2813 13.2227 28.7588 13.7002C29.2364 14.1777 29.5046 14.8254 29.5046 15.5007C29.5046 16.176 29.2364 16.8237 28.7588 17.3012C28.2813 17.7787 27.6336 18.047 26.9583 18.047H26.8437C26.4341 18.0487 26.0338 18.17 25.6922 18.3963C25.3507 18.6225 25.0827 18.9436 24.9213 19.3202Z" stroke="#D7E2EB" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </g>
        <defs>
          <clipPath id="clip0_443_1395">
            <rect width="30.5556" height="30.5556" fill="white" transform="translate(0.222168 0.222656)"/>
          </clipPath>
        </defs>
      </svg>
      </button>

      {/* The sliding panel */}
      <aside
        id="settings-panel"
        role="dialog"
        aria-label="Site settings"
        className={`${styles.panel} ${isOpen ? styles.panelOpen : ''}`}
      >
        <div className={styles.group}>
          <label className={styles.label} htmlFor="lang">Language</label>
          <select
            id="lang"
            className={styles.input}
            value={lang}
            onChange={(e) => setLang(e.target.value as any)}
          >
            <option value="en">English</option>
            <option value="es">Español</option>
          </select>
        </div>

        <div className={styles.group}>
          <span className={styles.label}>Mode</span>
          <div className={styles.row}>
            <button
              className={`${styles.choice} ${theme === 'light' ? styles.active : ''}`}
              onClick={() => setTheme('light')}
            >Light</button>
            <button
              className={`${styles.choice} ${theme === 'dark' ? styles.active : ''}`}
              onClick={() => setTheme('dark')}
            >Dark</button>
          </div>
        </div>

        <div className={styles.group}>
          <label className={styles.label} htmlFor="region">Country / Region</label>
          <select
            id="region"
            className={styles.input}
            value={region}
            onChange={(e) => setRegion(e.target.value as any)}
          >
            <option value="US">United States | USD $</option>
            <option value="GB">United Kingdom | GBP £</option>
            <option value="EU">European Union | EUR €</option>
          </select>
        </div>
      </aside>
    </>
  );
}
