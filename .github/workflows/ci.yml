name: CI

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  actions: read
  contents: read

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      # Checkout the code with full history
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Fetch the main branch explicitly if needed
      - name: Ensure Main Branch Exists
        run: git fetch origin main:main

      # Set the base branch dynamically
      - name: Determine Base Branch
        run: echo "BASE_BRANCH=${{ github.base_ref || 'main' }}" >> $GITHUB_ENV

      # Debug the base branch
      - name: Debug Base Branch
        run: git log $BASE_BRANCH --oneline -n 1

      # Set up Node.js environment and cache dependencies
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      # Install Dependencies
      - name: Install Dependencies
        run: npm install --legacy-peer-deps

      # Deploy Affected Projects to Vercel
      - name: Deploy Affected Projects to Vercel
        run: |
          affected_apps=$(npx nx affected:apps --base=$BASE_BRANCH --head=HEAD || echo "")
          if [[ -z "$affected_apps" ]]; then
            echo "No affected apps to deploy."
            exit 0
          fi

          for app in $affected_apps; do
            echo "Checking app: $app"
            if [[ "$app" == "sweet-sye-app" || "$app" == "nicoletta-portfolio-app" ]]; then
              echo "Deploying $app to Vercel..."
              npx vercel --cwd=apps/$app --token=$VERCEL_TOKEN --prod || {
                echo "Failed to deploy $app" >&2
                exit 1
              }
            else
              echo "Skipping $app as it's not a deployable app."
            fi
          done
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
